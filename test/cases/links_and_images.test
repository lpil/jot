```
[basic _link_][a_b_]

[a_b_]: url
.
<p><a href="url">basic <em>link</em></a></p>
```

```
![basic _image_][a_b_]

[a_b_]: url
.
<p><img alt="basic image" src="url"></p>
```

```
![unterminated image
.
<p>![unterminated image</p>
```

```
[link][]

[link]: url
.
<p><a href="url">link</a></p>
```


```
[link][]

[link]:
 url
.
<p><a href="url">link</a></p>
```

```
[link][]

[link]:
 url
.
<p><a href="url">link</a></p>
```

The URL can be split over multiple lines:

```
[link][]

[link]:
 url
  andurl
.
<p><a href="urlandurl">link</a></p>
```

```
[link](url
andurl)
.
<p><a href="urlandurl">link</a></p>
```

```
[link][]

[link]:
[link2]: url
.
<p><a href="">link</a></p>
```

```
[link][]
[link][link2]

[link2]:
  url2
[link]:
 url
.
<p><a href="url">link</a>
<a href="url2">link</a></p>
```

```
[link][a and
b]

[a and b]: url
.
<p><a href="url">link</a></p>
```

If the reference isn't found, we get an empty link.

```
[link][a and
b]
.
<p><a>link</a></p>
```

Reference definitions can't have line breaks in the key:

```
[link][a and
b]

[a and
b]: url
.
<p><a>link</a></p>
<p>[a and
b]: url</p>
```

No case normalization is done on reference definitions:

```
[Link][]

[link]: /url
.
<p><a>Link</a></p>
```

```
[link _and_ link][]

[link and link]: url
.
<p><a href="url">link <em>and</em> link</a></p>
```

```
![basic _image_](url)
.
<p><img alt="basic image" src="url"></p>
```

```
[unclosed](hello *a
b*
.
<p>[unclosed](hello <strong>a
b</strong></p>
```

Note that soft breaks are ignored, so long URLs
can be split over multiple lines:
```
[closed](hello *a
b*)
.
<p><a href="hello *ab*">closed</a></p>
```

Here the strong takes precedence over the link because it
starts first:
```
*[closed](hello*)
.
<p><strong>[closed](hello</strong>)</p>
```
