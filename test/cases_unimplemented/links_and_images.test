```
[link][a and
b]

[a and b]: url
.
<p><a href="url">link</a></p>
```

If the reference isn't found, we get an empty link.

```
[link][a and
b]
.
<p><a>link</a></p>
```

Reference definitions can't have line breaks in the key:

```
[link][a and
b]

[a and
b]: url
.
<p><a>link</a></p>
<p>[a and
b]: url</p>
```

No case normalization is done on reference definitions:

```
[Link][]

[link]: /url
.
<p><a>Link</a></p>
```

Attributes on reference definitions get transferred to
the link:

```
{title=foo}
[ref]: /url

[ref][]
.
<p><a href="/url" title="foo">ref</a></p>
```

Attributes on the link override those on references:

```
{title=foo}
[ref]: /url

[ref][]{title=bar}
.
<p><a href="/url" title="bar">ref</a></p>
```

```
[link _and_ link][]

[link and link]: url
.
<p><a href="url">link <em>and</em> link</a></p>
```

```
[![image](img.jpg)](url)
.
<p><a href="url"><img alt="image" src="img.jpg"></a></p>
```

Link in link?
```
[[foo](bar)](baz)
.
<p><a href="baz"><a href="bar">foo</a></a></p>
```

Link in image?
```
![[link](url)](img)
.
<p><img alt="link" src="img"></p>
```

Image in link?
```
[![image](img)](url)
.
<p><a href="url"><img alt="image" src="img"></a></p>
```

Autolinks:
```
<http://example.com/foo>
<me@example.com>
.
<p><a href="http://example.com/foo">http://example.com/foo</a>
<a href="mailto:me@example.com">me@example.com</a></p>
```

Openers inside `[..](` or `[..][` or `[..]{` can't match
outside them, even if the construction doesn't turn out to be
a link or span or image.

```
[x_y](x_y)
.
<p><a href="x_y">x_y</a></p>
```

```
[x_y](x_
.
<p>[x_y](x_</p>
```

```
[x_y]{.bar_}
.
<p><span class="bar_">x_y</span></p>
```
