Open quotes are matched with closed quotes.
The same method is used for matching openers and closers
as is used in emphasis parsing:

```
"Hello," said the spider.
"'Shelob' is my name."
.
<p>“Hello,” said the spider.
“‘Shelob’ is my name.”</p>
```

```
'A', 'B', and 'C' are letters.
.
<p>‘A’, ‘B’, and ‘C’ are letters.</p>
```

```
'Oak,' 'elm,' and 'beech' are names of trees.
So is 'pine.'
.
<p>‘Oak,’ ‘elm,’ and ‘beech’ are names of trees.
So is ‘pine.’</p>
```

```
'He said, "I want to go."'
.
<p>‘He said, “I want to go.”’</p>
```

A single quote that isn't an open quote matched
with a close quote will be treated as an
apostrophe:

```
Were you alive in the '70s?
.
<p>Were you alive in the ’70s?</p>
```

```
Here is some quoted '`code`' and a "[quoted link](url)".
.
<p>Here is some quoted ‘<code>code</code>’ and a “<a href="url">quoted link</a>”.</p>
```

Here the first `'` is treated as an apostrophe, not
an open quote, because the final single quote is matched
by the single quote before `jolly`:

```
'tis the season to be 'jolly'
.
<p>’tis the season to be ‘jolly’</p>
```

Multiple apostrophes should not be marked as open/closing quotes.

```
'We'll use Jane's boat and John's truck,' Jenna said.
.
<p>‘We’ll use Jane’s boat and John’s truck,’ Jenna said.</p>
```

An unmatched double quote will be interpreted as a
left double quote, to facilitate this style:

```
"A paragraph with no closing quote.

"Second paragraph by same speaker, in fiction."
.
<p>“A paragraph with no closing quote.</p>
<p>“Second paragraph by same speaker, in fiction.”</p>
```

A quote following a `]` or `)` character cannot
be an open quote:

```
[a]'s b'
.
<p>[a]’s b’</p>
```

Quotes that are escaped come out as literal straight
quotes:

```
\"This is not smart.\"
This isn\'t either.
5\'8\"
.
<p>"This is not smart."
This isn't either.
5'8"</p>
```

Doubled quotes are treated as nested:

```
''hi''
.
<p>‘‘hi’’</p>
```

Heuristics for determining openers and closers can
be overridden using `{` and `}`:

```
{''}hi{''}
.
<p>‘’hi‘’</p>
```
